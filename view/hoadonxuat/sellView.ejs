<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Giao diện bán hàng</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
</head>

<body>
    <%- include('../layouts/nav'); %>
    <div class="wrapper">
        <div class="container">
            <div
                class="row justify-content-around  p-3 my-3 bg-light border border-success-subtle rounded-4 shadow-lg">
                <div class="col-md-12">
                    <div class="row mt-3">
                        <div class="col">
                            <h2>Cồ Dũng</h2>
                        </div>
                        <div class="col">
                            <div class="row">
                                <div class="col">
                                    <h5>SDT khách hàng:</h5>
                                </div>
                                <div class="col">
                                    <form class="d-flex" id="searchForm" role="search">
                                        <input class="form-control me-2 shadow-lg" type="search" placeholder="Nhập SDT"
                                            aria-label="Search by Phone Number" id="searchPhoneNumberInput">
                                        <button class="btn btn-danger me-2" type="submit" data-bs-toggle="modal"
                                            data-bs-target="#checkModal">Check</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col">
                            <div class="row">
                                <div class="col">
                                    <label for="productId">Mã sản phẩm:</label>
                                    <select id="productId" name="productId" class="form-control">
                                        <option value="">Chọn sản phẩm</option>
                                        <!-- ${products.map(product => `<option value="${product.productId}">${product.productName}</option>`).join('')} -->
                                    </select>
                                </div>
                                <div class="col">
                                    <label for="quantity">Số lượng:</label>
                                    <input type="number" id="quantity" class="form-control">
                                </div>
                                <div class="col">
                                    <button class="btn btn-success mt-4" id="addToCartButton">Thêm vào giỏ</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">Mã sản phẩm</th>
                                    <th scope="col">Tên sản phẩm</th>
                                    <th scope="col">Số lượng</th>
                                    <th scope="col">Đơn giá</th>
                                    <th scope="col">Thành tiền</th>
                                </tr>
                            </thead>
                            <tbody id="productTableBody">

                            </tbody>
                            <tfoot>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th>Tổng tiền: </th>
                                <th id="totalAmount"></th>
                            </tfoot>
                        </table>

                    </div>
                    <div class="row mt-3">
                        <div class="col">
                            <button class="btn btn-danger">Thanh toán</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="checkModal" tabindex="-1" aria-labelledby="checkModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="checkModalLabel">Kiểm tra khách hàng</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Thông tin khách hàng</strong></p>
                    <div id="customerInfo"></div>
                </div>
                <div class="modal-footer">
                    <form action="/user/signUp">
                        <div class="text-center mt-3">
                            <button type="submit" class="btn btn-danger">Thêm mới</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const searchForm = document.getElementById('searchForm');
        const searchPhoneNumberInput = document.getElementById('searchPhoneNumberInput');
        const checkModal = document.getElementById('checkModal');
        const productTableBody = document.getElementById('productTableBody');
        const totalAmountElement = document.getElementById('totalAmount');

        const addToCartButton = document.getElementById('addToCartButton');
        const productIdInput = document.getElementById('productId');
        const quantityInput = document.getElementById('quantity');

        document.addEventListener('DOMContentLoaded', () => {

            searchForm.addEventListener('submit', function (event) {
                event.preventDefault();

                const searchPhoneNumberTerm = searchPhoneNumberInput.value.trim();

                fetch(`/user/getByPhoneNumber/${searchPhoneNumberTerm}`)
                    .then(response => response.json())
                    .then(data => {
                        const customerInfoElement = document.getElementById('customerInfo');
                        const customer = data[0];
                        if (data) {
                            const customerDetails = `Họ tên: ${customer.name}<br>
                                                    Email: ${customer.email}<br>
                                                    SDT: ${customer.phoneNumber}`;
                            customerInfoElement.innerHTML = customerDetails;
                        } else {
                            customerInfoElement.innerHTML = 'Không có thông tin khách hàng.';
                        }
                    })
                    .catch(error => {
                        console.error('Lỗi khi lấy thông tin người dùng:', error);
                        document.querySelector('.modal-body').textContent = 'Đã xảy ra lỗi khi lấy thông tin người dùng.';
                    });
            });
        });

        document.addEventListener('DOMContentLoaded', () => {
            fetch('/product/product')
                .then(response => response.json())
                .then(data => {
                    const productId = document.getElementById('productId');

                    data.forEach(product => {
                        const option = document.createElement('option');
                        option.value = product.productId;
                        option.text = product.productId;
                        productId.appendChild(option);
                    });
                })
                .catch(error => {
                    console.error('Lỗi khi lấy danh sách sản phẩm:', error);
                });
        });

        document.addEventListener('DOMContentLoaded', () => {
            addToCartButton.addEventListener('click', (event) => {
                event.preventDefault();

                const productId = productIdInput.value;
                const quantity = quantityInput.value;

                if (productId && quantity > 0) {
                    fetch(`/product/getProductById/${productId}`)
                        .then(response => response.json())
                        .then(data => {
                            const existingProductRow = productTableBody.querySelector(`tr[data-product-id="${productId}"]`);
                            if (existingProductRow) {
                                const existingQuantity = parseInt(existingProductRow.querySelector('td:nth-child(3)').textContent);
                                const newQuantity = existingQuantity + parseInt(quantity);
                                existingProductRow.querySelector('td:nth-child(3)').textContent = newQuantity;
                                updateTotalAmount();
                            } else {
                                var totalAmount = 0;
                                data.forEach(product => {
                                    const row = document.createElement('tr');
                                    const newTotalAmount = quantity * product.sellingPrice;
                                    row.setAttribute('data-product-id', productId);
                                    row.innerHTML = `
                                        <td>${productId}</td>
                                        <td>${product.productName}</td>
                                        <td>${quantity}</td>
                                        <td>${product.sellingPrice.toFixed(3)}</td>
                                        <td>${newTotalAmount.toFixed(3)}</td>
                                    `;
                                    productTableBody.appendChild(row);
                                    totalAmount += newTotalAmount;
                                });
                                updateTotalAmount();
                            }

                            // Update total amount
                            // totalAmountElement.textContent = totalAmount.toFixed(3);
                        })
                        .catch(error => {
                            console.error('Lỗi khi lấy sản phẩm:', error);
                        });

                    // Reset giá trị của các input
                    productIdInput.value = '';
                    quantityInput.value = '';
                }
            });
            quantityInput.addEventListener('input', updateTotalAmount);
        });
        function updateTotalAmount() {
        const rows = productTableBody.querySelectorAll('tr');
        let totalAmount = 0;

        rows.forEach(row => {
            const quantity = parseInt(row.querySelector('td:nth-child(3)').textContent);
            const sellingPrice = parseFloat(row.querySelector('td:nth-child(4)').textContent);
            const newTotalAmount = quantity * sellingPrice;
            row.querySelector('td:nth-child(5)').textContent = newTotalAmount.toFixed(3);
            totalAmount += newTotalAmount;
        });

        totalAmountElement.textContent = totalAmount.toFixed(2);
    }

    </script>

</body>

</html>
